1.  a)
    Ontario people spend more on thier credit cards.

    b)
    Query:
    SELECT a.mtype, AVG(c.amount) FROM paymentmethods a
    JOIN customers b ON b.custid = a.custid
    JOIN purchases c ON c.pmid = a.pmid
    WHERE b.province = 'ON'
    GROUP BY a.mtype

    Results:
    mtype   avg
    debit	101.06	
    credit	131.4	


2.  a)
    The people outside BC spent the most.

    b)
    CREATE VIEW vancouver_custs AS
    WITH 
    vprefixes (vp) AS 
        (SELECT DISTINCT pcprefix FROM greater_vancouver_prefixes)
    SELECT customers.custid,
        CASE
        WHEN SUBSTRING(customers.postalcode, 1, 3) IN (SELECT vp FROM vprefixes)
        THEN 1
        ELSE 0
    END AS in_vancouver
    FROM customers;

    c)
    Query:
    SELECT vancouver_custs.in_vancouver AS from_van,
    CASE 
        WHEN customers.province = 'BC' AND from_van = 0
        THEN 1
        ELSE 0
    END AS from_bc_non_van,
    COUNT(amount) AS amount,
    AVG(amount) AS average,
    MEDIAN(amount) AS median
    FROM vancouver_custs
    JOIN customers ON customers.custid = vancouver_custs.custid
    JOIN purchases ON purchases.custid = customers.custid
    GROUP BY (from_van, from_bc_non_van)

    Results
    from_van from_bc_non_van amount average median
    1	    0        	    10384  86.01   27.37	
    0	    0        	    15717  112.89  33.27	
    0	    1        	    3899   95.16   30.08	


3.  a)
    People outside Greater Vancouver spend more at sushi restaurants.

    b)
    Query:
    CREATE VIEW vancouver_custs AS
    WITH
    vprefixes (vp) AS 
        (SELECT DISTINCT pcprefix FROM greater_vancouver_prefixes)
    SELECT customers.custid,
        CASE
        WHEN SUBSTRING(customers.postalcode, 1, 3) IN (SELECT vp FROM vprefixes)
        THEN 1
        ELSE 0
    END AS in_vancouver
    FROM customers;

    WITH
    sushi AS (
        SELECT amenid
        FROM amenities
        WHERE amenity = 'restaurant' 
            AND tags.cuisine IS NOT NULL
            AND tags.cuisine ILIKE '%sushi%'
    )

    SELECT AVG(amount) AS avg, in_vancouver
    FROM sushi
    JOIN purchases on purchases.amenid = sushi.amenid
    JOIN vancouver_custs on vancouver_custs.custid = purchases.custid
    GROUP BY in_vancouver
    ORDER BY in_vancouver

    Results:
    avg     in_vancouver
    77.57	1
    85.8	0

4.  a)
    For Aug 1: 96.59, Aug 2: 106.56, Aug 3: 95.87, Aug 4: 115.5, Aug 5: 95.67

    b)
    Query:
    SELECT pdate, AVG(amount)
    FROM purchases
    WHERE DATE_PART(month, pdate) = 8
    AND DATE_PART(day, pdate) BETWEEN 1 AND 5
    GROUP BY pdate
    ORDER BY pdate

    Results:
    pdate       avg
    2021-08-01	96.59	
    2021-08-02	106.56	
    2021-08-03	95.87	
    2021-08-04	115.5	
    2021-08-05	95.67	

    c)
    Redshift
    94.06 KB
    4703 rows
    ratio = 20

    d)
    Spectrum
    267396 bytes
    4703 rows
    ratio = 56.86

    e)
    Redshift scans the table sequentially, scans a much smaller number of bytes and is also
    column-oriented, so it can ignore columns we don't need. Spectrum scans it in parallel, 
    scans a number of bytes similar to the file size and is scanning files that are hive partioned.

    f)
    If the dataset isn't too big, isn't able to be partioned well, or the queries can benefit from column-oriented
    scans. 

    g)
    If the dataset is large or is able to be partioned well.